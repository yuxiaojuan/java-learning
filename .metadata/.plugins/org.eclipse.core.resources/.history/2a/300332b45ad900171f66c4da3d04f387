package com.yusj.firstLearning.threadlocal;

import java.util.Random;

/**
 * ThreadLocal测试
 * @author yusj
 *
 */
public class ThreadLocalDemo implements Runnable{

	private final static ThreadLocal<People> threadLocal = new ThreadLocal<People>(); 
	
	public static void main(String[] args) {
		ThreadLocalDemo td = new ThreadLocalDemo();
		Thread thread1 = new Thread(td);
		Thread thread2 = new Thread(td);
		thread1.start();
		thread2.start();
	}
	
	public void run() {
		accessStudent();
	}
	
	public void accessStudent() {
		//获取当前线程的名字
		String currentThreadName = Thread.currentThread().getName();
		System.out.println(currentThreadName + " is running!");
		
		//产生一个随机数并打印
		Random random = new Random();
		int age = random.nextInt(100);
		System.out.println("thread" + currentThreadName + " set age to " + age);
		People people = getPeople();
		people.setAge(age);
		System.out.println("thread" + currentThreadName + " first read age is "+ people.getAge());
		try {
			Thread.sleep(500);
		}catch (InterruptedException e) {
			e.printStackTrace();
		}
		System.out.println("thread" + currentThreadName + " read second age is " + people.getAge());
	}
	
	protected People getPeople() {
		People people = threadLocal.get();
		//线程首次执行此方法时，threadLocal.get()肯定为null
		if(people == null) {
			//创建 一个对象，并保存到本地线程变量threadLocal中
			people = new People();
			threadLocal.set(people);
		}
		return people;
	}
}

class People{
	private int age = 0;

	public int getAge() {
		return this.age;
	}

	public void setAge(int age) {
		this.age = age;
	}
	
}
